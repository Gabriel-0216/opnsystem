// <auto-generated />
using System;
using Dominio.DAL.Contexto;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Dominio.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Dominio.Entidades.Departamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Data_Atualizacao")
                        .HasColumnType("DATETIME")
                        .HasColumnName("Data_Atualizacao");

                    b.Property<DateTime>("Data_Criacao")
                        .HasColumnType("DATETIME")
                        .HasColumnName("Data_Criacao");

                    b.HasKey("Id");

                    b.ToTable("[Departamento]", (string)null);
                });

            modelBuilder.Entity("Dominio.Entidades.Sugestao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Data_Atualizacao")
                        .HasColumnType("DATETIME")
                        .HasColumnName("Data_Atualizacao");

                    b.Property<DateTime>("Data_Criacao")
                        .HasColumnType("DATETIME")
                        .HasColumnName("Data_Criacao");

                    b.Property<int>("DepartamentoId")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("TextoSugestao");

                    b.Property<string>("Justificativa")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("Justificativa");

                    b.HasKey("Id");

                    b.HasIndex("DepartamentoId");

                    b.ToTable("[Sugestoes]", (string)null);
                });

            modelBuilder.Entity("Dominio.Entidades.Departamento", b =>
                {
                    b.OwnsOne("Dominio.Entidades.ObjetosDeValor.Nome", "NomeDepartamento", b1 =>
                        {
                            b1.Property<int>("DepartamentoId")
                                .HasColumnType("int");

                            b1.Property<string>("Descricao")
                                .IsRequired()
                                .HasMaxLength(256)
                                .HasColumnType("varchar(256)")
                                .HasColumnName("NomeDepartamento");

                            b1.HasKey("DepartamentoId");

                            b1.ToTable("[Departamento]");

                            b1.WithOwner()
                                .HasForeignKey("DepartamentoId");
                        });

                    b.Navigation("NomeDepartamento")
                        .IsRequired();
                });

            modelBuilder.Entity("Dominio.Entidades.Sugestao", b =>
                {
                    b.HasOne("Dominio.Entidades.Departamento", "Departamento")
                        .WithMany("Sugestoes")
                        .HasForeignKey("DepartamentoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.OwnsOne("Dominio.Entidades.ObjetosDeValor.Nome", "NomeColaborador", b1 =>
                        {
                            b1.Property<int>("SugestaoId")
                                .HasColumnType("int");

                            b1.Property<string>("Descricao")
                                .IsRequired()
                                .HasMaxLength(256)
                                .HasColumnType("varchar(256)")
                                .HasColumnName("NomeColaborador");

                            b1.HasKey("SugestaoId");

                            b1.ToTable("[Sugestoes]");

                            b1.WithOwner()
                                .HasForeignKey("SugestaoId");
                        });

                    b.Navigation("Departamento");

                    b.Navigation("NomeColaborador")
                        .IsRequired();
                });

            modelBuilder.Entity("Dominio.Entidades.Departamento", b =>
                {
                    b.Navigation("Sugestoes");
                });
#pragma warning restore 612, 618
        }
    }
}
